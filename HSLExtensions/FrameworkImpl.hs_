//----------------------------------------------------------------------------------------
// Project              : HSL Extension Framework
// Description          : Framework library with framework functions
// Revision history:
//----------------------------------------------------------------------------------------
#ifndef __HSLEXTENSIONS_FRAMEWORKINTERFACE__
#define __HSLEXTENSIONS_FRAMEWORKINTERFACE__ 1

//============================== includes ==============================
#pragma once //use either "#pragma once" or "include guard", not both
#include "HSLExtensions/HSLExtensionsFramework.hsl"
#include "HSLStrLib/HSLStrLib.hsl"

//============================== HSLExtension ==============================
namespace HSLExtensions
{
   //============================== Array ==============================
   namespace Framework
   {
      //------------------------------------------------------
      // Get the framework version
      //
      // [return] version (string)
      //------------------------------------------------------
      function GetVersion() variable
      {
         return(HSLExtensions::Framework::Informations::GetVersion());
      }

      //------------------------------------------------------
      // Set the trace level of the framework
      //
      // [in] i_intTraceLevel: trace level (see ASWStandard::TraceLevel)
      //------------------------------------------------------
      function SetTraceLevel(variable i_intTraceLevel) void
	   {
         HSLExtensions::Framework::Trace::SetTraceLevel(i_intTraceLevel);		      
	   }

      //------------------------------------------------------
      // Gets the serial number from the instrument (instrument must be initialized)
      // [return] serialnumber (string)
      //------------------------------------------------------
      function GetSerialNumber(device& ML_STAR) variable
      {
	   variable command("");								// Command string
	   variable parameter("");								// Parameter string
	   variable serialNumber("");							// Serial number
	   variable rc[];											// Low level step return values

	   // Get serial number
	   command = "C0RI";				// Request Installation data
	   parameter = "";
	   rc = ML_STAR.FirmwareCommand( "1e78330b_4cb4_456b_84d80d3b33e97e73" );
	   if (4 == rc.GetSize())
      {
		   serialNumber = StrMid(rc.ElementAt(3), StrFind(rc.ElementAt(3), "sn"), 6);
      }
	   return(StrMakeUpper(serialNumber));
      }  
   } //end Framework
} //end HSLExtension
#endif //end __HSLEXTENSIONS_FRAMEWORKINTERFACE__
