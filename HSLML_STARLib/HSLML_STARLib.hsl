// ======================================================================
// This is a part of the HSL File Library.
// ======================================================================
//
// Modification History
// 	
// ======================================================================

#ifndef __HSLML_STARLib_hsl__
#define __HSLML_STARLib_hsl__	1

#ifdef HSL_RUNTIME
#pragma once
#include "HSLML_STARLib.hs_"
#endif


#ifndef HSL_RUNTIME
namespace HSLML_STAR
{
	static function AspirationMonitoringOn(device& ml_star) void {}
	function AspirationMonitoring_1000ulChannel_On(device& ml_star) void {}
	function AspirationMonitoring_5mlChannel_On(device& ml_star) void {}

	static function AspirationMonitoringOff(device& ml_star) void {}
	function AspirationMonitoring_1000ulChannel_Off(device& ml_star) void {}
	function AspirationMonitoring_5mlChannel_Off(device& ml_star) void {}

	static function ClotDetectionMonitoringOn(device& ml_star) void {}
	function ClotDetectionMonitoring_1000ulChannel_On(device& ml_star) void {}
	function ClotDetectionMonitoring_5mlChannel_On(device& ml_star) void {}

	static function ClotDetectionMonitoringOff(device& ml_star) void {}
	function ClotDetectionMonitoring_1000ulChannel_Off(device& ml_star) void {}
	function ClotDetectionMonitoring_5mlChannel_Off(device& ml_star) void {}

	static function AntiDropletControlOn(device& ml_star) void {}
	function AntiDropletControl_1000ulChannel_On(device& ml_star) void {}
	function AntiDropletControl_5mlChannel_On(device& ml_star) void {}

	static function AntiDropletControlOff(device& ml_star) void {}
	function AntiDropletControl_1000ulChannel_Off(device& ml_star) void {}
	function AntiDropletControl_5mlChannel_Off(device& ml_star) void {}

	static function SetPressureThreshold(device& ml_star, variable pressure) void {}
	function SetPressureThreshold_1000ulChannel(device& ml_star, variable pressure) void {}
	function SetPressureThreshold_5mlChannel(device& ml_star, variable pressure) void {}

	function SetBarcodeTypes(
		device& ml_star, variable& barcodeTypes) void {}

	static function MeasureContainerVolume(											// obsolete, use MeasureContainerVolume2 instead (SCR#836)
		device& ml_star,
		sequence& targetSequence,
		variable autoIncrement,
		variable& channelPattern,
		variable cLLDSensitivity,
		variable pLLDSensitivity,
		variable maxHeightDifference) variable { return(0); }

	function MeasureContainerVolume2(
		device& ml_star,
		sequence& targetSequence,
		variable autoIncrement,
		variable& channelPattern,
		variable cLLDSensitivity,
		variable pLLDSensitivity,
		variable maxHeightDifference) variable { return(0); }

	function GetContainerVolume(
		variable channel) variable { return(0); }

   function CreateATBarcodefile(
		device& ml_star,
		variable& Labware_id_Plate) variable { return(0); }

	function GetInstrumentType() variable { return(0); }

	function GetInstrumentType_GlobalDevice(
		device& ml_star) variable { return(0); }

	function IsSimulatorMode(
		device& ml_star) variable { return(0); }

	function DeleteBarcodeFile(
		variable& barcodeFileName) variable	{ return(0); }

	function FormatBarcodeFile(
		device& ml_star,
		variable& barcodeFileName,
		variable& formatedBarcodeFileName) variable { return(0); }

	function ExecuteWorklist(
		device& ML_STAR, 
		sequence& tipPickupSequence,
		variable& channelPattern,
		variable& barcodeFileName,
		variable& worklistFileName,
		variable& liquidClass) variable { return(0); }
}

#endif
#endif
